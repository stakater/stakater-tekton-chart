##########################################################
# Name/Namespace of the application
##########################################################

name: stakater-tekton-chart

 # Workspace Definition
workspaces:
#  - name: source
#    volumeClaimTemplate:
#      accessModes: ReadWriteOnce
#      resourcesRequestsStorage: 1Gi
#  - name: source1
#    persistentVolumeClaim:
#      claimName: my-pvc
#  - name: source2
#    configMap:
#      configMapName: my-cm
#  - name: source3
#    emptyDir: "true"

pipelines:
  enabled: true
  # Pipeline Tasks
  tasks:
    # Task Name, Params, Workspaces
    - defaultTaskName: git-clone
    # - name: task1
    #   defaultTaskName: kube-linting-v1
    # - name: task2
    #   params:
    #    - name: pipelineparam2
    #      value: value
    #   workspaces:
    #    - name: source
    #      workspace: source
    #   runAfter:
    #   - git-clone
    # - name: task3
    #   params:
    #   - name: p1
    #     value: v1
    #   workspaces:
    #   - name: source
    #     workspace: source
    #   taskSpec:
    #     steps:
    #

##########################################################
# Trigger Template Definition
# Creates a Single Trigger Template
# Takes Params from pipelines as well as its own params
##########################################################

triggertemplate:

  enabled: true

  params:
    - name: prnumberBranch
      default: "main"

  # PipelineRun Name Prefix
  pipelineRunNamePrefix:

 # Annotations for pipeline run
  pipelineRunAnnotations:
#  tekton.dev/git-status: "true"
#  tekton.dev/status-context: "pipeline-operator"
# tekton.dev/status-description: "Pipeline running on Openshift"

  # Pod Template for PipelineRun Pods
  pipelineRunPodTemplate:
  #
  #
  #

##########################################################
# Trigger Binding Definition
# Creates multiple trigger bindings as specified.
# Name and Params needs to be specified for every
##########################################################

triggerbinding:
  enabled: false
  # All Bindings to be Created are specified here
  bindings:
    # Name
  - name: stakater-tekton-chart-triggerbinding
    # Fields to Extracts from Event Body
    bodyParams:
      - name: param1
        value: $(body.param1)

##########################################################
# Event Listener Definition
# 1 or more triggers can be specified
##########################################################

eventlistener:
  enabled: true
  # Service Account
  route:
    enabled: true

    # Route Labels
    routeLabels:
      category: route
      router: default

    # Port
    targetPort: http-listener

    # Wildcard policy
#    wildcardPolicy:

    # tls settings
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect

  # Pod Template for Eventlistener Pod
  podTemplate:
  #
  #
  #

#    triggers:
#      - name: stakater-pr-cleaner-v1
#        create: false
#      - name: push
#        bindings:
#      - name: some trigger
#        interceptors:
#          - ref:
#              name: "cel"
#            params:
#              - name: "filter"
#                value: "(header.match('X-GitHub-Event', 'pull_request') && body.action == 'opened' || body.action == 'synchronize')"
#        bindings:
#        - binding1

serviceAccount:
  # Specify already existing service account name with create:false,
  # secrets,imagePullSecrets will be ignored
  name: stakater-tekton-builder
  create: false
  secrets:
    - name: nexus-docker-config-forked
    - name: git-auth-forked
  imagePullSecrets:
    - name: nexus-docker-config-forked

rbac:
  enabled: false

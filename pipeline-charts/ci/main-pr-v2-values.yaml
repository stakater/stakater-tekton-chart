name: stakater-main-pr-v2
additionalParams:
  - name: gitbranch
    description: The git branch name
  - name: repoName
    description: Repository name
  - name: webhook-payload
    description: Content of Webhook Payload
  - name: tekton-base-url
    description: Base Url of Tekton
  - name: prnumberBranch
    description: PR number in case of pr else main
    default: main
workspaces:
  - name: source
    volumeClaimTemplate:
      accessModes: ReadWriteOnce
      resourcesRequestsStorage: 1Gi
pipelines:
  finally:
    - taskName: stakater-set-commit-status-v1
      name: set-commit-status-task-result
  tasks:
    - taskName: stakater-set-commit-status-v1
      params:
      - name: state
        value: pending
    - taskName: git-clone
    - taskName: stakater-create-git-tag-v1
    - taskName: stakater-unit-test-v1
      workspaces:
      - name: source
        workspace: source
    - taskName: stakater-sonarqube-scanner-v1
      params:
        - name: sonar_host_url
          value: "http://sonarqube.stakater-sonarqube:9000"
        - name: sonar_project_key
          value: $(params.repoName)
      workspaces:
      - name: source
        workspace: source
    - taskName: stakater-buildah-v1
      runAfter:
      - stakater-unit-test-v1
    - taskName: stakater-trivy-scan-v1
      params:
      - name: IMAGE
        value: $(params.image_registry_url):$(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
      workspaces:
      - name: source
        workspace: source
      runAfter:
      - stakater-buildah-v1
    - taskName: rox-image-scan
      params:
        - name: image
          value: '$(params.image_registry_url):$(tasks.stakater-create-git-tag-v1.results.GIT_TAG)'
        - name: rox_api_token
          value: roxsecrets
        - name: rox_central_endpoint
          value: roxsecrets
        - name: output_format
          value: csv
        - name: image_digest
          value: $(tasks.stakater-buildah-v1.results.IMAGE_DIGEST)
      runAfter:
      - stakater-buildah-v1
    - taskName: rox-image-check
      params:
        - name: image
          value: '$(params.image_registry_url):$(tasks.stakater-create-git-tag-v1.results.GIT_TAG)'
        - name: rox_api_token
          value: roxsecrets
        - name: rox_central_endpoint
          value: roxsecrets
      runAfter:
      - stakater-buildah-v1
    - taskName: rox-deployment-check
      params:
        - name: rox_api_token
          value: roxsecrets
        - name: rox_central_endpoint
          value: roxsecrets
        - name: file
          value: values.yaml
        - name: deployment_files_path
          value: deploy
      workspaces:
      - name: source
        workspace: source
      runAfter:
      - stakater-buildah-v1
    - taskName: stakater-checkov-scan-v1
      runAfter:
      - stakater-trivy-scan-v1
      - rox-image-scan
      - rox-image-check
      - rox-deployment-check
      workspaces:
        - name: source
          workspace: source
    - taskName: stakater-comment-on-github-pr-v1
    - taskName: stakater-helm-push-v1
    - taskName: stakater-create-environment-v1
      params:
        - name: repoName
          value: $(params.repoName)
        - name: prNumber
          value: $(params.prnumber)
        - name: gitUrl
          value: $(params.gitrepositoryurl)
        - name: gitBranch
          value: $(params.gitbranch)
        - name: imageTag
          value: $(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
        - name: imageRepo
          value: $(params.image_registry_url)
      workspaces:
        - name: output
          workspace: source
    - taskName: stakater-update-cd-repo-v3
      params:
      - name: prnumber
        value: $(params.prnumber)
      - name: IMAGE_TAG
        value: $(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
      - name: IMAGE_NAME
        value: $(params.image_registry_url)
      - name: environment
        value: $(params.environment)
      - name: repoPath
        value: $(params.repoPath)
      - name: gitrevision
        value: $(params.gitrevision)
      - name: gitorganization
        value: $(params.gitorganization)
      - name: gitcdrepo
        value: $(params.gitcdrepo)
      - name: clusterName
        value: $(params.clusterName)
      - name: team
        value: $(params.team)
      - name: namespace
        value: $(params.namespace)
      - name: helm_registry
        value: $(params.helm_registry)
      workspaces:
      - name: source
        workspace: source
    - taskName: stakater-push-main-tag-v1
triggertemplate:
  serviceAccountName: stakater-tekton-builder
triggers:
  enabled: true
  eventlistenerTriggers:
  - defaultTriggerName: pullrequest
    interceptors:
      - ref:
          name: "cel"
        params:
          - name: "filter"
            value: "(header.match('X-GitHub-Event', 'pull_request') && body.action == 'opened' || body.action == 'synchronize')"
          - name: "overlays"
            value:
              - key: marshalled-body
                expression: "body.marshalJSON()"
    bindings:
    - ref: stakater-pr-v1
  - defaultTriggerName: push
    interceptors:
      - ref:
          name: "cel"
        params:
          - name: "filter"
            value: "(header.match('X-GitHub-Event', 'push') && (body.ref == 'refs/heads/main' || body.ref == 'refs/heads/master') )"
          - name: "overlays"
            value:
              - key: marshalled-body
                expression: "body.marshalJSON()"
    bindings:
    - ref: stakater-main-v1
eventlistener:
  serviceAccountName: stakater-tekton-builder
  triggers:
  - stakater-pr-cleaner-v2-pullrequest-merge
  - stakater-main-pr-v2-pullrequest
  - stakater-main-pr-v2-push

---
# Source: pipeline-charts/templates/eventlistener.yaml
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: stakater-main-pr-v1
  namespace: default
spec:
  serviceAccountName: stakater-tekton-builder
  triggers:
  - name: pullrequest-trigger
    interceptors:
    - cel:
        filter: "(header.match('X-GitHub-Event', 'pull_request') && body.action == 'opened' || body.action == 'synchronize')"
    bindings:
    - ref: stakater-pr-v1
    - ref: common-bindings
    template:
      ref: stakater-main-pr-v1
  - name: push-trigger
    interceptors:
    - cel:
        filter: "(header.match('X-GitHub-Event', 'push') && (body.ref == 'refs/heads/main' || body.ref == 'refs/heads/master') )"
    bindings:
    - ref: stakater-main-v1
    - ref: common-bindings
    template:
      ref: stakater-main-pr-v1
---
# Source: pipeline-charts/templates/pipeline.yaml
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: stakater-main-pr-v1
  namespace: default
spec:
  params:
    - name: gitorganization
    - name: gitcdrepo
    - name: team
    - name: clusterName
    - name: gitrevision
    - name: gitrepositoryurl
    - name: image_registry_url
    - name: namespace
    - name: prnumber
    - name: repoPath
    - name: author
    - name: helm_registry
    - name: environment
  workspaces:
    - name: source
  tasks:
    - name: git-clone
      taskRef:
        - name: git-clone
          kind: ClusterTask
      params:
      - name: url
        value: $(params.gitrepositoryurl)
      - name: revision
        value: $(params.gitrevision)
      - name: depth
        value: 0      
      workspaces:
        - name: output
          workspace: source
    - name: stakater-create-git-tag-v1
      taskRef:
        - name: stakater-create-git-tag-v1
          kind: ClusterTask
      params:
      - name: prnumber
        value: $(params.prnumber)
      - name: gitrevision
        value: $(params.gitrevision)      
      workspaces:
        - name: source
          workspace: source
      runAfter:
        - git-clone
    - name: stakater-buildah-v1
      taskRef:
        - name: stakater-buildah-v1
          kind: ClusterTask
      params:
      - name: IMAGE
        value: $(params.image_registry_url):$(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
      - name: TLSVERIFY
        value: false
      - name: FORMAT
        value: docker      
      workspaces:
        - name: source
          workspace: source
      runAfter:
        - stakater-create-git-tag-v1
    - name: stakater-comment-on-github-pr-v1
      taskRef:
        - name: stakater-comment-on-github-pr-v1
          kind: ClusterTask
      params:
      - name: prnumber
        value: $(params.prnumber)
      - name: gitrepositoryurl
        value: $(params.gitrepositoryurl)
      - name: IMAGE
        value: $(params.image_registry_url):$(tasks.stakater-create-git-tag-v1.results.GIT_TAG)      
      workspaces:
        - name: source
          workspace: source
      runAfter:
        - stakater-buildah-v1
    - name: stakater-helm-push-v1
      taskRef:
        - name: stakater-helm-push-v1
          kind: ClusterTask
      params:
      - name: prnumber
        value: $(params.prnumber)
      - name: repoPath
        value: $(params.repoPath)
      - name: gitrevision
        value: $(params.gitrevision)
      - name: registry
        value: $(params.helm_registry)
      - name: semVer
        value: $(tasks.stakater-create-git-tag-v1.results.GIT_TAG)      
      workspaces:
        - name: source
          workspace: source
      runAfter:
        - stakater-comment-on-github-pr-v1
    - name: stakater-update-cd-repo-v1
      taskRef:
        - name: stakater-update-cd-repo-v1
          kind: ClusterTask
      params:
      - name: prnumber
        value: $(params.prnumber)
      - name: environment
        value: $(params.environment)
      - name: repoPath
        value: $(params.repoPath)
      - name: gitrevision
        value: $(params.gitrevision)
      - name: gitorganization
        value: $(params.gitorganization)
      - name: gitcdrepo
        value: $(params.gitcdrepo)
      - name: clusterName
        value: $(params.clusterName)
      - name: team
        value: $(params.team)
      - name: namespace
        value: $(params.namespace)
      - name: IMAGE_TAG
        value: $(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
      - name: IMAGE_NAME
        value: $(params.image_registry_url)      
      workspaces:
        - name: source
          workspace: source
      runAfter:
        - stakater-helm-push-v1
    - name: stakater-push-main-tag-v1
      taskRef:
        - name: stakater-push-main-tag-v1
          kind: ClusterTask
      params:
      - name: prnumber
        value: $(params.prnumber)
      - name: gitrevision
        value: $(params.gitrevision)
      - name: IMAGE_TAG
        value: $(tasks.stakater-create-git-tag-v1.results.GIT_TAG)      
      workspaces:
        - name: source
          workspace: source
      runAfter:
        - stakater-update-cd-repo-v1
---
# Source: pipeline-charts/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: stakater-main-pr-v1
  namespace: default
  labels:
    category: route
    router: default
spec:
  port:
    targetPort: http-listener
  to:
    kind: Service
    name: el-stakater-main-pr-v1
    weight: 100
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Source: pipeline-charts/templates/triggerbinding.yaml
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: common-bindings
spec:
 params:
  - name: namespace
    value: ${namespace}
  - name: gitorganization
    value: github.com/stakater
  - name: gitcdrepo
    value: gitops-config-template
  - name: team
    value: NA
  - name: clusterName
    value: 01-devtest
  - name: environment
    value: 01-dev
  - name: repoName
    value: $(body.repository.name)
  - name: repoPath
    value: $(body.repository.full_name)
  - name: gitrepositoryurl
    value: https://github.com/$(body.repository.full_name)
  - name: image_registry_url
    value: nexus-docker-stakater-nexus.apps.binero-test.8sdzwd1l.kubeapp.cloud/$(body.repository.name)
  - name: helm_registry
    value: https://nexus-helm-stakater-nexus.apps.binero-test.8sdzwd1l.kubeapp.cloud/repository/helm-charts/
  - name: nexus_url
    value: https://nexus-repository-stakater-nexus.apps.binero-test.8sdzwd1l.kubeapp.cloud/repository/maven-public
  - name: tekton-base-url
    value: https://console-openshift-console.apps.binero-test.8sdzwd1l.kubeapp.cloud/k8s/
  - name: webhook-payload
    value: $(extensions.marshalled-body)
---
# Source: pipeline-charts/templates/triggerbinding.yaml
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: stakater-main-v1
spec:
 params:
  - name: gitrevision
    value: $(body.repository.master_branch)
  - name: prnumberBranch
    value: main
  - name: prnumber
    value: NA
  - name: author
    value: $(body.head_commit.author.name)
---
# Source: pipeline-charts/templates/triggerbinding.yaml
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: stakater-pr-v1
spec:
 params:
  - name: gitrevision
    value: $(body.pull_request.head.sha)
  - name: gitbranch
    value: $(body.pull_request.head.ref)
  - name: prnumberBranch
    value: pr-$(body.pull_request.number)
  - name: prnumber
    value: $(body.pull_request.number)
  - name: author
    value: $(body.pull_request.user.login)
---
# Source: pipeline-charts/templates/triggertemplate.yaml
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: stakater-main-pr-v1
  namespace: default
spec:
  params:
    - name: gitorganization
      description: The git organization containing the CD repo
    - name: gitcdrepo
      description: The CD git repo in the gitorganization param
    - name: team
      description: The team name for the microservice
    - name: clusterName
      description: The cluster name on which the apps will get deployed
    - name: gitrevision
      description: The git revision
      default: main
    - name: gitrepositoryurl
      description: The git repository url
    - name: image_registry_url
      description: The container registry url
    - name: namespace
      description: The namespace to create the resources
    - name: prnumber
      description: PR number in case of pull request, Empty value if it's a push event
      default: NA
    - name: repoPath
      description: Path of repository with group name
      default: NA
    - name: author
      description: Author of commit
    - name: helm_registry
      description: Helm registry url
    - name: environment
      description: Name of environment
    - name: repoName
      description: Repository name
      default: NA
    - name: prnumberBranch
      description: PR number in case of pr else main
      default: main
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: $(tt.params.repoName)-$(tt.params.prnumberBranch)-
        namespace: default
        annotations:
          tekton.dev/git-status: "true"
          tekton.dev/status-context: pipeline-operator
          tekton.dev/status-description: Pipeline running on Openshift
      spec:
        serviceAccountName: stakater-tekton-builder
        params:
          - name: gitorganization
            value: $(tt.params.gitorganization)
          - name: gitcdrepo
            value: $(tt.params.gitcdrepo)
          - name: team
            value: $(tt.params.team)
          - name: clusterName
            value: $(tt.params.clusterName)
          - name: gitrevision
            value: $(tt.params.gitrevision)
          - name: gitrepositoryurl
            value: $(tt.params.gitrepositoryurl)
          - name: image_registry_url
            value: $(tt.params.image_registry_url)
          - name: namespace
            value: $(tt.params.namespace)
          - name: prnumber
            value: $(tt.params.prnumber)
          - name: repoPath
            value: $(tt.params.repoPath)
          - name: author
            value: $(tt.params.author)
          - name: helm_registry
            value: $(tt.params.helm_registry)
          - name: environment
            value: $(tt.params.environment)
        pipelineRef:
          name: stakater-main-pr-v1
        workspaces:
          - name: source
            volumeClaimTemplate:
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi

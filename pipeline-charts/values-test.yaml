##########################################################
# Name/Namespace of the application
##########################################################

name: stakater-main-pr-v1

##########################################################
# Pipeline Run Annotations in Trigger Template
##########################################################
annotations: 
  tekton.dev/git-status: "true"
  tekton.dev/status-context: "pipeline-operator"
  tekton.dev/status-description: "Pipeline running on Openshift"

##########################################################
# Pipeline Definition
# Creates a Single Trigger Template
##########################################################

pipelines:
  # Pipeline Workspaces
  workspaces:
    - name: source
  # Pipeline Params
  params:
    - name: gitorganization
      description: The git organization containing the CD repo
    - name: gitcdrepo
      description: The CD git repo in the gitorganization param
    - name: team
      description: The team name for the microservice
    - name: clusterName
      description: The cluster name on which the apps will get deployed
    - name: gitrevision
      description: The git revision
      default: main
    - name: gitrepositoryurl
      description: The git repository url
    - name: image_registry_url
      description: The container registry url
    - name: namespace
      description: The namespace to create the resources
    - name: prnumber
      description: PR number in case of pull request, Empty value if it's a push event
      default: NA
    - name: repoPath
      description: Path of repository with group name
      default: "NA"
    - name: author
      description: Author of commit
    - name: helm_registry
      description: Helm registry url 
    - name: environment
      description: Name of environment
  # Pipeline Tasks
  tasks:
    # Task Name, Params, Workspaces
    - taskName: git-clone
      params:
        - name: url
        - name: revision
      workspaces:
        - name:  output
          workspace: source

    # Task Name, Params, Workspaces
    - taskName: stakater-create-git-tag-v1
      params:
        - name: prnumber
        - name: gitrevision
      workspaces:
        - name:  source
          workspace: source
      runAfter:
      - git-clone

    # Task Name, Params, Workspaces
    - taskName: stakater-buildah-v1
      params:
        - name: IMAGE
          value: $(params.image_registry_url):$(tasks.create-git-tag.results.GIT_TAG)
        - name: TLSVERIFY
          value: "false"
        - name: FORMAT
          value: "docker"
      workspaces:
        - name:  source
          workspace: source
      runAfter:
      - stakater-create-git-tag-v1

    # Task Name, Params, Workspaces
    - taskName: stakater-comment-on-github-pr-v1
      params:
        - name: prnumber
        - name: gitrepositoryurl
        - name: IMAGE
          value: $(params.image_registry_url):$(tasks.create-git-tag.results.GIT_TAG)
      workspaces:
        - name:  source
          workspace: source
      runAfter:
      - stakater-buildah-v1

    # Task Name, Params, Workspaces
    - taskName: stakater-update-cd-repo-v1
      params:
        - name: prnumber
        - name: environment
        - name: repoPath
        - name: gitrevision
        - name: gitorganization
        - name: gitcdrepo
        - name: clusterName
        - name: team
        - name: namespace
        - name: IMAGE_TAG
          value: $(tasks.create-git-tag.results.GIT_TAG)
        - name: IMAGE_NAME
          value: $(params.image_registry_url)
      workspaces:
        - name:  source
          workspace: source
      runAfter:
      - stakater-comment-on-github-pr-v1

    # Task Name, Params, Workspaces
    - taskName: stakater-helm-push-v1
      params:
        - name: prnumber
        - name: repoPath
        - name: gitrevision
        - name: registry
          value: $(params.helm_registry)
      workspaces:
        - name:  source
          workspace: source
      runAfter:
      - stakater-update-cd-repo-v1

    # Task Name, Params, Workspaces
    - taskName: stakater-push-main-tag-v1
      params:
      - name: prnumber
      - name: gitrevision
      - name: IMAGE_TAG
        value: $(tasks.create-git-tag.results.GIT_TAG)
      workspaces:
        - name:  source
          workspace: source
      runAfter:
      - stakater-helm-push-v1


##########################################################
# Trigger Template Definition
# Creates a Single Trigger Template, Name is as defined
# above.
# Takes Params from pipelines as well as its own params.
##########################################################

triggertemplate:

 enabled: true
 # Additional Params
 params:
 - name: repoName
   description: Repository name
   default: "NA"
 - name: prnumberBranch
   description: PR number in case of pr else main
   default: main 
 # PipelineRun Name Prefix
 pipelineRunNamePrefix: $(tt.params.repoName)-$(tt.params.prnumberBranch)
 # Service Account Name 
 serviceAccountName: stakater-tekton-builder
 # Workspace Definition
 workspaces:
  - name: source
    type: volumeClaimTemplate
    accessModes: ReadWriteOnce
    resourcesRequestsStorage: 1Gi


##########################################################
# Trigger Binding Definition
# Creates multiple trigger bindings as specified.
# Name and Params needs to be specified for every
##########################################################

triggerbinding:
  enabled: true
  # All Bindings to be Created are specified here
  bindings:
    # Name
  - name: stakater-main-pr-v1
    # Fields to Extracts from Event Body
    bodyParams:
      - name: gitrevision
        value: $(body.pull_request.head.sha)
      - name: gitrepositoryurl
        value: $(body.repository.html_url)
      - name: pull_request_title
        value: $(body.pull_request.title)


##########################################################
# Event Listener Definition
# 1 or more triggers can be specified
##########################################################

eventlistener:
  enabled: true
  # Service Account
  serviceAccountName: stakater-tekton-builder
  # All Event Triggers
  triggers:
    - name: pullrequest-merge-trigger
      templateName: stakater-pr-cleaner-v1
      interceptors_cel_filter: "(header.match('X-GitHub-Event', 'pull_request') && body.action == 'closed' )"
      bindings:
      - stakater-pr-cleaner-v1
    - name: pullrequest-trigger
      templateName: stakater-main-pr-v1
      interceptors_cel_filter: "(header.match('X-GitHub-Event', 'pull_request') && body.action == 'opened' || body.action == 'synchronize')"
      bindings:
      - stakater-pr-v1

    - name: push-trigger
      templateName: stakater-main-pr-v1
      interceptors_cel_filter: "(header.match('X-GitHub-Event', 'push') && (body.ref == 'refs/heads/main' || body.ref == 'refs/heads/master') )"
      bindings:
      - stakater-main-v1



##########################################################
# Name/Namespace of the application
##########################################################

name: pipeline-charts

##########################################################
# Pipeline Definition
# Creates a Single Trigger Template
##########################################################
default_pipelines:
  params:
    - name: gitorganization
      description: The git organization containing the CD repo
    - name: gitcdrepo
      description: The CD git repo in the gitorganization param
    - name: team
      description: The team name for the microservice
    - name: clusterName
      description: The cluster name on which the apps will get deployed
    - name: gitrevision
      description: The git revision
      default: main
    - name: gitrepositoryurl
      description: The git repository url
    - name: image_registry_url
      description: The container registry url
    - name: namespace
      description: The namespace to create the resources
    - name: prnumber
      description: PR number in case of pull request, Empty value if it's a push event
      default: NA
    - name: repoPath
      description: Path of repository with group name
      default: "NA"
    - name: author
      description: Author of commit
    - name: helm_registry
      description: Helm registry url 
    - name: environment
      description: Name of environment
  tasks:
    - taskName: stakater-set-commit-status-v1
      params:
      - name: webhook-payload
        value: $(params.webhook-payload)
      - name: state
        value: $(tasks.status)
      - name: tekton-base-url
        value: $(params.tekton-base-url)
      - name: pipeline_name
        value: $(context.pipelineRun.name)
      - name: pipeline_namespace
        value: $(context.pipelineRun.namespace)
    - taskName: git-clone
      params:
        - name: url
          value: $(params.gitrepositoryurl)
        - name: revision
          value: $(params.gitrevision)
        - name: depth
          value: "0"
      workspaces:
        - name:  output
          workspace: source 
    - taskName: stakater-create-git-tag-v1
      params:
        - name: prnumber
        - name: gitrevision
      workspaces:
        - name:  source
          workspace: source
    - taskName: stakater-buildah-v1
      params:
        - name: IMAGE
          value: $(params.image_registry_url):$(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
        - name: TLSVERIFY
          value: "false"
        - name: FORMAT
          value: "docker"
      workspaces:
        - name:  source
          workspace: source
    - taskName: stakater-comment-on-github-pr-v1
      params:
        - name: prnumber
        - name: gitrepositoryurl
        - name: IMAGE
          value: $(params.image_registry_url):$(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
      workspaces:
        - name:  source
          workspace: source
    - taskName: stakater-helm-push-v1
      params:
        - name: prnumber
        - name: repoPath
        - name: gitrevision
        - name: registry
          value: $(params.helm_registry)
        - name: semVer
          value: $(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
      workspaces:
        - name:  source
          workspace: source
    - taskName: stakater-update-cd-repo-v1
      params:
        - name: prnumber
        - name: environment
        - name: repoPath
        - name: gitrevision
        - name: gitorganization
        - name: gitcdrepo
        - name: clusterName
        - name: team
        - name: namespace
        - name: IMAGE_TAG
          value: $(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
        - name: IMAGE_NAME
          value: $(params.image_registry_url)
      workspaces:
        - name:  source
          workspace: source
    - taskName: stakater-push-main-tag-v1
      params:
      - name: prnumber
      - name: gitrevision
      - name: IMAGE_TAG
        value: $(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
      workspaces:
        - name:  source
          workspace: source
    - taskName: stakater-create-environment-provisioner-v1
      params:
      - name: repoName
      - name: prNumber
        value: $(params.prnumber)
      - name: gitUrl
        value: $(params.gitrepositoryurl)
      - name: gitBranch
      - name: imageTag
        value: $(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
      - name: imageRepo
        value: $(params.image_registry_url)
      workspaces:
        - name: output
          workspace: source

default_triggers:
  templates:
    - triggerName: pullrequest
      interceptors:
      - ref:
           name: "cel"
        params: 
         - name: "filter"
           value: "(header.match('X-GitHub-Event', 'pull_request') && body.action == 'opened' || body.action == 'synchronize')" 
      bindings:
      - stakater-pr-v1
      - common-bindings

    - triggerName: push
      interceptors:
      - ref:
           name: "cel"
        params: 
         - name: "filter"
           value: "(header.match('X-GitHub-Event', 'push') && (body.ref == 'refs/heads/main' || body.ref == 'refs/heads/master') )"
      bindings:
      - stakater-pr-v1
      - common-bindings

    - triggerName: pullrequest-merge
      interceptors:
      - ref:
           name: "cel"
        params:
         - name: "filter"
           value: "(header.match('X-GitHub-Event', 'pull_request') && body.action == 'closed' )"
      bindings:
      - ref: stakater-pr-cleaner-v1

# Additional Params for pipelines & trigger template
additionalParams:
# - name: gitorganization
#   description: my description
# - name: templateparam
#   description: templateparam description
#   default: "templateparam-default"

 # Workspace Definition
workspaces:
#  - name: source
#    volumeClaimTemplate:
#      accessModes: ReadWriteOnce
#      resourcesRequestsStorage: 1Gi
#  - name: source1
#    persistentVolumeClaim:
#      claimName: my-pvc
#  - name: source2
#    configMap:
#      configMapName: my-cm
#  - name: source3
#    emptyDir: "true"

pipelines:
  enabled: true
  # Pipeline Tasks
  tasks:
    # Task Name, Params, Workspaces
    - taskName: git-clone
    # workspaces:
    #    - name:  output
    #      workspace: source

    # Task Name, Params, Workspaces
    # - taskName: task2
    #   params:
    #    - name: pipelineparam2
    #   workspaces:
    #    - name:  source
    #      workspace: source
    #   runAfter:
    #  - git-clone


##########################################################
# Trigger Template Definition
# Creates a Single Trigger Template
# Takes Params from pipelines as well as its own params
##########################################################

triggertemplate:

  enabled: true

  # PipelineRun Name Prefix
  pipelineRunNamePrefix: 

  # Service Account Name
  serviceAccountName:

 # Annotations for pipeline run
  pipelineRunAnnotations:
#  tekton.dev/git-status: "true"
#  tekton.dev/status-context: "pipeline-operator"
# tekton.dev/status-description: "Pipeline running on Openshift"


##########################################################
# Trigger Binding Definition
# Creates multiple trigger bindings as specified.
# Name and Params needs to be specified for every
##########################################################

triggerbinding:
  enabled: false
  # All Bindings to be Created are specified here
  bindings:
    # Name
  - name: pipeline-charts-triggerbinding
    # Fields to Extracts from Event Body
    bodyParams:
      - name: param1
        value: $(body.param1)

triggers:
  enabled: true
#  eventlistenerTriggers:
#
##########################################################
# Event Listener Definition
# 1 or more triggers can be specified
##########################################################

eventlistener:
  enabled: true
  # Service Account
  serviceAccountName: pipeline-charts-service-account

  route:
    enabled: true

    # Route Labels
    routeLabels:
      category: route
      router: default

    # Port
    targetPort: http-listener

    # Wildcard policy
#    wildcardPolicy: 

    # tls settings
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect

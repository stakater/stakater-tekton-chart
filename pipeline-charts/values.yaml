##########################################################
# Name/Namespace of the application
##########################################################

name: pipeline-charts

default_triggers:
  templates:
    - triggerName: pullrequest
      interceptors:
      - ref:
          name: "cel"
        params:
        - name: "filter"
          value: "(header.match('X-GitHub-Event', 'pull_request') && body.action == 'opened' || body.action == 'synchronize')"
      bindings:
      - stakater-pr-v1
      - common-bindings

    - triggerName: push
      interceptors:
      - ref:
          name: "cel"
        params:
        - name: "filter"
          value: "(header.match('X-GitHub-Event', 'push') && (body.ref == 'refs/heads/main' || body.ref == 'refs/heads/master') )"
      bindings:
      - stakater-pr-v1
      - common-bindings

    - triggerName: pullrequest-merge
      interceptors:
      - ref:
          name: "cel"
        params:
        - name: "filter"
          value: "(header.match('X-GitHub-Event', 'pull_request') && body.action == 'closed' )"
      bindings:
      - ref: stakater-pr-cleaner-v1

# Additional Params for pipelines & trigger template
additionalParams:
# - name: gitorganization
#   description: my description
# - name: templateparam
#   description: templateparam description
#   default: "templateparam-default"

 # Workspace Definition
workspaces:
#  - name: source
#    volumeClaimTemplate:
#      accessModes: ReadWriteOnce
#      resourcesRequestsStorage: 1Gi
#  - name: source1
#    persistentVolumeClaim:
#      claimName: my-pvc
#  - name: source2
#    configMap:
#      configMapName: my-cm
#  - name: source3
#    emptyDir: "true"

pipelines:
  enabled: true
  # Pipeline Tasks
  tasks:
    # Task Name, Params, Workspaces
    - taskName: git-clone
    # workspaces:
    #    - name:  output
    #      workspace: source

    # Task Name, Params, Workspaces
    # - taskName: task2
    #   params:
    #    - name: pipelineparam2
    #   workspaces:
    #    - name:  source
    #      workspace: source
    #   runAfter:
    #  - git-clone


##########################################################
# Trigger Template Definition
# Creates a Single Trigger Template
# Takes Params from pipelines as well as its own params
##########################################################

triggertemplate:

  enabled: true

  # PipelineRun Name Prefix
  pipelineRunNamePrefix:

  # Service Account Name
  serviceAccountName:

 # Annotations for pipeline run
  pipelineRunAnnotations:
#  tekton.dev/git-status: "true"
#  tekton.dev/status-context: "pipeline-operator"
# tekton.dev/status-description: "Pipeline running on Openshift"


##########################################################
# Trigger Binding Definition
# Creates multiple trigger bindings as specified.
# Name and Params needs to be specified for every
##########################################################

triggerbinding:
  enabled: false
  # All Bindings to be Created are specified here
  bindings:
    # Name
  - name: pipeline-charts-triggerbinding
    # Fields to Extracts from Event Body
    bodyParams:
      - name: param1
        value: $(body.param1)

triggers:
  enabled: true
#  eventlistenerTriggers:
#
##########################################################
# Event Listener Definition
# 1 or more triggers can be specified
##########################################################

eventlistener:
  enabled: true
  # Service Account
  serviceAccountName: pipeline-charts-service-account

  route:
    enabled: true

    # Route Labels
    routeLabels:
      category: route
      router: default

    # Port
    targetPort: http-listener

    # Wildcard policy
#    wildcardPolicy:

    # tls settings
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect

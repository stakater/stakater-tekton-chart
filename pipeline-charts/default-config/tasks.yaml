default_pipelines:
  params:
    - name: gitorganization
      description: The git organization containing the CD repo
    - name: gitcdrepo
      description: The CD git repo in the gitorganization param
    - name: team
      description: The team name for the microservice
    - name: clusterName
      description: The cluster name on which the apps will get deployed
    - name: gitrevision
      description: The git revision
      default: main
    - name: gitrepositoryurl
      description: The git repository url
    - name: image_registry_url
      description: The container registry url
    - name: namespace
      description: The namespace to create the resources
    - name: prnumber
      description: PR number in case of pull request, Empty value if it's a push event
      default: NA
    - name: repoPath
      description: Path of repository with group name
      default: "NA"
    - name: author
      description: Author of commit
    - name: helm_registry
      description: Helm registry url
    - name: environment
      description: Name of environment
  tasks:
    - taskName: stakater-set-commit-status-v1
      params:
      - name: webhook-payload
        value: $(params.webhook-payload)
      - name: state
        value: $(tasks.status)
      - name: tekton-base-url
        value: $(params.tekton-base-url)
      - name: pipeline_name
        value: $(context.pipelineRun.name)
      - name: pipeline_namespace
        value: $(context.pipelineRun.namespace)
    - taskName: git-clone
      params:
        - name: url
          value: $(params.gitrepositoryurl)
        - name: revision
          value: $(params.gitrevision)
        - name: depth
          value: "0"
      workspaces:
        - name: output
          workspace: source
    - taskName: stakater-create-git-tag-v1
      params:
        - name: prnumber
        - name: gitrevision
      workspaces:
        - name: source
          workspace: source
    - taskName: stakater-buildah-v1
      params:
        - name: IMAGE
          value: $(params.image_registry_url):$(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
        - name: TLSVERIFY
          value: "false"
        - name: FORMAT
          value: "docker"
      workspaces:
        - name: source
          workspace: source
    - taskName: stakater-comment-on-github-pr-v1
      params:
        - name: prnumber
        - name: gitrepositoryurl
        - name: IMAGE
          value: $(params.image_registry_url):$(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
      workspaces:
        - name: source
          workspace: source
    - taskName: stakater-helm-push-v1
      params:
        - name: prnumber
        - name: repoPath
        - name: gitrevision
        - name: registry
          value: $(params.helm_registry)
        - name: semVer
          value: $(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
      workspaces:
        - name: source
          workspace: source
    - taskName: stakater-update-cd-repo-v1
      params:
        - name: prnumber
        - name: environment
        - name: repoPath
        - name: gitrevision
        - name: gitorganization
        - name: gitcdrepo
        - name: clusterName
        - name: team
        - name: namespace
        - name: IMAGE_TAG
          value: $(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
        - name: IMAGE_NAME
          value: $(params.image_registry_url)
      workspaces:
        - name: source
          workspace: source
    - taskName: stakater-push-main-tag-v1
      params:
      - name: prnumber
      - name: gitrevision
      - name: IMAGE_TAG
        value: $(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
      workspaces:
        - name: source
          workspace: source
    - taskName: stakater-create-environment-provisioner-v1
      params:
      - name: repoName
      - name: prNumber
        value: $(params.prnumber)
      - name: gitUrl
        value: $(params.gitrepositoryurl)
      - name: gitBranch
      - name: imageTag
        value: $(tasks.stakater-create-git-tag-v1.results.GIT_TAG)
      - name: imageRepo
        value: $(params.image_registry_url)
      workspaces:
        - name: output
          workspace: source
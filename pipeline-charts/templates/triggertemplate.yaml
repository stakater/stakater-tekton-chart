{{ if .Values.triggertemplate.enabled }}
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: {{ include "pipeline-charts.name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  {{- if or .Values.pipelines.params .Values.triggertemplate.additionalParams }}
  params:
    {{- range .Values.pipelines.params }}
    - name: {{ .name }}   
      {{- if .description }}
      description: {{ .description }} 
      {{- end }}
      {{- if .default }}
      default: {{ .default }} 
      {{- end }}
    {{- end }}
    {{- range .Values.triggertemplate.additionalParams }}
    - name: {{ .name }}   
      {{- if .description }}
      description: {{ .description }} 
      {{- end }}
      {{- if .default }}
      default: {{ .default }} 
      {{- end }}
    {{- end }}
  {{- end }}
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        {{- if .Values.triggertemplate.pipelineRunNamePrefix }}
        generateName: {{ .Values.triggertemplate.pipelineRunNamePrefix }}-
        {{- else }}
        generateName: {{ include "pipeline-charts.name" . }}-
        {{- end }}
        namespace: {{ .Release.Namespace }}
        {{- if .Values.annotations }}
        annotations:
        {{- range $key, $value := .Values.annotations }}        
          - {{ $key }}: {{ $value }}
        {{- end }}
        {{- end }}
      spec:
        {{- if .Values.triggertemplate.serviceAccountName }}
        serviceAccountName: {{ .Values.triggertemplate.serviceAccountName }}
        {{- end }}
        {{- if .Values.pipelines.params }}
        params:
          {{- range .Values.pipelines.params }}
          - name: {{ .name }}
            value: {{ cat "$(tt.params." .name ")" | replace " " "" }}    
          {{- end }}
        {{- end }}
        pipelineRef:
          name: {{ include "pipeline-charts.name" . }}
        {{- if .Values.triggertemplate.workspaces }}
        workspaces:
          {{- range .Values.triggertemplate.workspaces -}}
          {{- if eq .type "volumeClaimTemplate"}}
          - name: {{ .name }}
            volumeClaimTemplate:
              spec:
                accessModes:
                - {{ .accessModes }}
                resources:
                  requests:
                    storage: {{ .resourcesRequestsStorage }}
          {{- end -}}
          {{- if eq .type "persistentvolumeclaim" }}
          - name: {{ .name }}
            persistentVolumeClaim:
              claimName: {{ .claimName }}
            subPath: {{ .subPath }}
          {{- end -}}
          {{- if eq .type "emptydir" }}
          - name: {{ .name }}
            emptyDir: {}
          {{- end -}}
          {{- if eq .type "configmap" }}
          - name: {{ .name }}
            configmap:
              name: {{ .configMapName }}
          {{- end }}
          {{- end }}
        {{- end }}
{{- end }}